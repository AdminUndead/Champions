buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "${version_minecraft}-${version_mod}"
group = "${mod_group}.${mod_id}"
archivesBaseName = "${mod_id}"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${version_minecraft}-${version_forge}"
    runDir = "run"
    mappings = "${version_mcp}"
    replace '@VERSION@', project.version
    replace '@FINGERPRINT@', project.findProperty('signSHA1')
    replaceIn("${mod_class}.java")
}

sourceSets {
    main {
        resources {
            srcDirs += 'docs'
        }
    }
}

repositories {

    maven {
        url 'https://maven.blamejared.com/'
    }

    maven {
        url 'https://maven.mcmoddev.com/'
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
}

dependencies {

    deobfProvided "net.darkhax.bookshelf:Bookshelf-1.12.2:${version_bookshelf}"
    deobfProvided "net.darkhax.gamestages:GameStages-1.12.2:${version_gamestages}"
    deobfProvided "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-${version_crafttweaker}"
    // compile against the JEI API but do not include it at runtime
    deobfProvided "mezz.jei:jei_1.12.2:4.13.1.225:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_1.12.2:4.13.1.225"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task signJar(type: SignJar, dependsOn: reobfJar) {

    onlyIf {
        project.hasProperty('keyStore')
    }

    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

build.dependsOn signJar


